Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії


ЗВІТ
з лабораторної роботи №5
з дисципліни «Архітектура програмного забезпечення»



Виконав:
ст. гр. ПЗПІ-22-6
Макогон Б.О.

Перевірив:
ст. викл. каф. ПІ
Сокорчук І.П.


Харків 2025

1 ІСТОРІЯ ЗМІН
Зміни звіту наведені у таблиці 1.1.
Таблиця 1.1 - Історія змін
№	Дата	Версія звіту	Опис змін
1	30.05.2025	0.1	Створено розділ “Історія змін”
2	30.05.2025	0.1	Створено розділ “Завдання”
3	30.05.2025	0.1	Створено розділ “Опис виконаної роботи”
4	30.05.2025	0.1	Створено розділ “Висновки”
5	30.05.2025	0.1	Доданий Додаток А
6	30.05.2025	0.1	Доданий Додаток Б
7	30.05.2025	0.2	Відредаговано розділ “Опис виконаної роботи”


2 ЗАВДАННЯ
Необхідно розгорнути програмний застосунок.
Проаналізуйте завдання.
Виконайте контрольні завдання.
Відкрийте створений на попередній лабораторній роботі репозиторій GitHub.
Створіть у репозиторії директорію Task5 та текстовий файл з описом інженерних рішень у цій частині проєкту, як вказано у додатку З
Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті.
Створіть у директорії Task5 піддиректорію для програмного коду, як вказано у додатку З
Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторій зміни
Виконайте функціональне тестування створеного програмного коду та створіть відеозапис цього тестування тривалістю 7..10 хвилин з усними поясненнями процесу тестування
Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua
Створіть для завантаженого запису його хронологічний опис.
Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/
У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube.


3 ОПИС ВИКОНАНОЇ РОБОТИ
Серверна частина програмної системи розроблена з використанням мови програмування Java та фреймворку Spring Boot. Для зберігання даних використовується реляційна база даних PostgreSQL.
Доступ до бази даних реалізовано за допомогою ORM-інструменту Spring Data JPA, що дозволяє виконувати основні операції над даними у вигляді об'єктів.
Процес розгортання серверної частини програмної системи реалізовано за допомогою технології контейнеризації Docker, що забезпечує ізольоване середовище для роботи застосунку та усіх необхідних сервісів.
Для автоматизованого запуску усіх компонентів проєкту використовується інструмент orchestration — Docker Compose. У конфігураційному файлі docker-compose.yml описано сервіси для застосунку та бази даних, а також налаштовано мережеві з'єднання між ними.
Усі налаштування для підключення до бази даних виконані через змінні середовища, що гарантує безпечність та гнучкість при розгортанні. Резервне копіювання бази даних може бути організовано шляхом додавання окремого контейнера з відповідними утилітами, наприклад, postgres-backup.
Оскільки програмна система доступна у вигляді Docker-образу та містить конфігурацію Docker Compose, її можна легко розгорнути на будь-якій платформі, що підтримує Docker-контейнери, забезпечуючи швидкий старт та масштабованість проєкту.
Для розгортки потрібно:
1. Створи Dockerfile для backend (і frontend, якщо треба).
2. Створи docker-compose.yml з усіма сервісами.
3. Додай dockerignore.
4. Перевір application.properties (ENV замість жорстких значень).
5. Побудуй JAR-файл (mvn package).
6. Запусти:docker-compose up --build
7. Перевір роботу проекту.


4 ВИСНОВКИ
Під час виконання лабораторної роботи було розгорнуто серверну та веб частини програмної системи.

Відеозапис доповіді на YouTube: https://www.youtube.com/watch?v=jXbhJgGcxWQ
Хронологічний опис доповіді:
1. Вступ - 0:00
1.1 Реєстрація користувача на Web - 0:40
1.3 Вхід - 1:10
1.2 Демонстрація бази даних - 1:24
1.4 Додавання нового сенсора - 1:40
1.5 Демонстрація бази даних - 1:53
1.6 Додавання нового сенсора - 2:05
1.7 Редагування сенсора - 2:15
1.8 Демонстрація бази даних -  2:22
1.9 Відкрити покази сенсора - 2:33
1.10 Видалення сенсора - 2:54
1.11 Демонстрація бази даних - 2:59
2.1 Вхід під користувачем з Android - 3:15
2.2 Додавання нового сенсора - 3:35
2.3 Демонстрація бази даних - 3:44
1.12 Демонстрація змін на web стороні - 3:55







