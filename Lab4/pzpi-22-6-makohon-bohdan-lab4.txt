Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії


ЗВІТ
з лабораторної роботи №4
з дисципліни «Архітектура програмного забезпечення»



Виконав:
ст. гр. ПЗПІ-22-6
Макогон Б.О.

Перевірив:
ст. викл. каф. ПІ
Сокорчук І.П.


Харків 2025

1 ІСТОРІЯ ЗМІН
Зміни звіту наведені у таблиці 1.1.
Таблиця 1.1 - Історія змін
№	Дата	Версія звіту	Опис змін
1	28.05.2025	0.1	Створено розділ “Історія змін”
2	28.05.2025	0.1	Створено розділ “Завдання”
3	28.05.2025	0.1	Створено розділ “Опис виконаної роботи”
4	28.05.2025	0.1	Створено розділ “Висновки”
5	28.05.2025	0.1	Доданий Додаток А
6	28.05.2025	0.2	Доданий Додаток Б


2 ЗАВДАННЯ
Необхідно розробити мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.
Проаналізуйте завдання.
Виконайте контрольні завдання.
Відкрийте створений на попередній лабораторній роботі репозиторій GitHub.
Створіть у репозиторії директорію Task5 та текстовий файл з описом інженерних рішень у цій частині проєкту, як вказано у додатку З
Зафіксуйте кожну внесену зміну командою git commit з відповідним коментарем та фіксуйте цією командою усі наступні зміни у проєкті.
Створіть у директорії Task5 піддиректорію для програмного коду, як вказано у додатку З
Створіть програмний код, завантажте його у створену піддиректорію, зафіксуйте внесені у репозиторій зміни
Виконайте функціональне тестування створеного програмного коду та створіть відеозапис цього тестування тривалістю 7..10 хвилин з усними поясненнями процесу тестування
Завантажте створений відеозапис тестування YouTube канал для вашого облікового запису в домені @nure.ua
Створіть для завантаженого запису його хронологічний опис.
Оформіть звіт у форматі pdf та завантажте його на навчальну платформу https://dl.nure.ua/
У коментарях до завантаженого звіту вкажіть посилання на відеозапис тестування у вашому каналі YouTube.


3 ОПИС ВИКОНАНОЇ РОБОТИ
Мобільний програмний застосунок розроблено для платформи Android із використанням мови програмування Java та сучасного фреймворку Jetpack Compose для побудови інтерфейсу користувача.
Для організації взаємодії із серверною частиною застосовується бібліотека Retrofit2, яка забезпечує зручну реалізацію HTTP-запитів до REST API. Для обробки та серіалізації/десеріалізації даних у форматі JSON використовується бібліотека Jackson.
Основна функціональність застосунку полягає в отриманні даних користувача, його підключених пристроїв (датчиків), а також їхніх вимірювань і прогнозу погоди з серверної частини програмної системи.
Для зберігання авторизаційних даних та забезпечення захищеної взаємодії із сервером реалізована автентифікація на основі JWT-токенів: при виконанні кожного запиту до серверу застосунок надсилає токен, який перевіряється сервером на дійсність.
Застосунок підтримує базові сценарії реєстрації та автентифікації користувача, перегляду та керування списком пристроїв, а також перегляду даних, отриманих із пристроїв та погодних сервісів.
Проект побудовано із дотриманням принципів розділення відповідальностей (MVVM), що сприяє зручності супроводу та розвитку програмного забезпечення.
Розробка виконувалася із дотриманням сучасних підходів до безпеки, захисту даних користувача, та забезпечення стабільності роботи навіть при нестабільному інтернет-з’єднанні.


4 ВИСНОВКИ
Під час виконання лабораторної роботи було розроблено мобільний програмний застосунок для будь-якої поширеної на сьогодні мобільної платформи.


Додаток А
Посилання на відео та хронологічний опис

Відеозапис презентації результатів лабораторної роботи: https://www.youtube.com/watch?v=Z71xFFig3Ok

Хронологічний опис відеозапису:

1. Вступ - 0:00
1.1 Реєстрація нового користувача - 0:40
1.2 Вхід - 0:55
1.3 Демонстрація бази даних - 1:15
1.4 Додавання нового сенсора - 1:33
1.5 Демонстрація бази даних - 1:45
1.6 Додавання нового сенсора - 1:58
1.7 Редагування сенсора - 2:07
1.8 Демонстрація бази даних - 2:14
1.9 Відкритя покази сенсора -2:25
1.10 Видалення сенсора - 2:45
1.11 Демонстрація бази даних - 2:50
1.12 Реєстрація нового користувача - 3:08
1.13 Вхід під новим користувачем - 3:24
1.14 Демонстрація бази даних - 3:35
1.15 Додавання нового сенсора - 3:49
1.16 Додавання ще одного сенсора - 3:55
1.17 Демонстрація бази даних - 4:10
1.19 Вхід під старим користувачем - 4:30


Додаток Б
ГРАФІЧНІ МАТЕРІАЛИ

Рисунок Б.1 - UML діаграма прецедентів

Рисунок Б.2 - Діаграма компонентів

Рисунок Б.3 - Діаграма взаємодії

Рисунок Б.4 - Діаграма станів


Додаток В
ПРОГРАМНИЙ КОД

В.1 Математична обробка прикладних даних
GitHub репозиторій: https://github.com/NureMakohonBohdan/apz-pzpi-22-6-makohon-bohdan-web/blob/main/src/main/java/com/nure/makohon/bohdan/arkpz_pzpi_22_6_makohon_bohdan/service/MathUtils.java

public class MathUtils {

 public static double mean(double[] data) {
        if (data.length == 0) return 0;
        double sum = 0;
        for (double d : data) sum += d;
        return sum / data.length;
    }

    public static double median(double[] data) {
        if (data.length == 0) return 0;
        double[] sorted = Arrays.copyOf(data, data.length);
        Arrays.sort(sorted);
        int mid = sorted.length / 2;
        return (sorted.length % 2 != 0) ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2.0;
    }

    public static double standardDeviation(double[] data) {
        if (data.length == 0) return 0;
        double mean = mean(data);
        double sum = 0;
        for (double d : data) sum += Math.pow(d - mean, 2);
        return Math.sqrt(sum / data.length);
    }
 }