МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ




Практична робота №1


з дисципліни
«Архітектура програмного забезпечення»





Харків 2025

1 ІСТОРІЯ ЗМІН
Зміни звіту наведені у таблиці 1.1.
Таблиця 1.1 - Історія змін
№	Дата	Версія звіту	Опис змін
1	14.06.2025	0.1	Створено розділ “Історія змін”
2	14.06.2025	0.1	Створено розділ “Завдання”
3	14.06.2025	0.1	Створено розділ “Опис виконаної роботи”
4	14.06.2025	0.1	Створено розділ “Висновки”
5   14.06.2025	0.1	Додані посилання і хронологічний опис доповіді у Додаток А
6	14.06.2025	0.1	Додані слайди презентації у Додаток Б

2 ЗАВДАННЯ
Підготувати доповідь про архітектуру однієї з відомих складних програмних систем.
Створити та оформити слайди презентації доповіді.
Створити та опублікувати на YouTube відеозапис доповіді.
Оформити та завантажити на dl.nure.ua звіт до виконаної роботи.
При потребі створити та налаштувати у GitHub обліковий запис для облікового запису студента в домені @nure.ua.
Створити для виконання завдань з дисципліни GitHub репозиторій iз вказаним на https://dl.nure.ua іменем та з головною гілкою main.
Створити у корені створеного репозиторію файл README.md з вказаним далі змістом та вказані далі директорії для окремих завдань.
Експортувати звіт у файл у простому текстововому форматі та завантажити цей файл у директорію Pract2 у репозиторії GitHub.
Завантажити у вказану далі піддиректорію увесь програмний код, який розглядається у доповіді ПЗ2.

3 ОПИС ВИКОНАНОЇ РОБОТИ
Netflix — це провідна світова платформа для стрімінгу фільмів і серіалів, яка стартувала в 2007 році як онлайновий сервіс (до того компанія з 1997 року займалася доставкою DVD поштою). Сьогодні Netflix обслуговує понад 200 млн підписників у більшості країн світу та забезпечує адаптивну трансляцію відео високої якості для різноманітних пристроїв.
Раніше веб-плеєр Netflix був реалізований на основі Microsoft Silverlight — це дозволяло гарантувати плавне відтворення відео, але вимагало встановлення додаткового плагіну і ускладнювало підтримку.
Сьогодні Netflix використовує власний HTML5 Player, побудований із застосуванням Media Source Extensions (MSE) та Encrypted Media Extensions (EME).
Основні переваги HTML5 Player:
Відсутність потреби в плагінах і кросбраузерна сумісність.
Підтримка адаптивного бітрейту (MPEG-DASH, HLS) для плавного відтворення за будь-яких умов мережі.
Інтеграція з DRM-модулями (Widevine, PlayReady, FairPlay).
Швидке оновлення через віддалену доставку JavaScript-бібліотек.
Мобільні клієнти Netflix для Android розроблені на Java/Kotlin із використанням ExoPlayer, для iOS — на Objective-C/Swift із AVFoundation.
Основні переваги нативних мобільних застосунків:
Можливість офлайн-завантажень та кешування контенту.
Тісна інтеграція з системою сповіщень та управління DRM.
Оптимізована робота на різних версіях операційних систем.
Використання адаптивних алгоритмів підстроювання під мережеві умови пристрою.
Клієнти для Smart TV і приставок (Samsung, LG, Roku, PlayStation тощо) виконані на JavaScript/HTML5 із використанням власного Netflix SDK і плеєрних інтерфейсів, що надають єдиний досвід перегляду на великих екранах.
Всі клієнти взаємодіють з бекендом через RESTful API поверх HTTPS із обміном JSON-даними та використовують WebSockets для деяких реальних оновлень (наприклад, синхронізації субтитрів чи статистики відтворення).
Бекенд Netflix побудований на мікросервісній архітектурі з переважним застосуванням Java/Spring Boot та компонентів Netflix OSS:
Eureka для сервіс-дискавері,
Zuul як API-Gateway,
Ribbon для клієнтського балансування навантаження,
Hystrix для Circuit Breaker,
Archaius для динамічної конфігурації,
Turbine для агрегування метрик.
Хмарна інфраструктура Netflix розгорнута в AWS:
EC2 для обчислювальних ресурсів,
S3 для зберігання медіафайлів і метаданих,
DynamoDB для швидкого доступу до великих обсягів структурованих записів,
Kinesis та Kafka для збору і обробки потоків подій,
EMR і Lambda для аналітики й batch-обробки даних.
Контейнеризацію забезпечує Docker, оркестрацію — Titus (власний контейнерний сервіс на основі AWS), а для CI/CD використовується Spinnaker та Jenkins.
Netflix Open Connect — власна глобальна CDN, що складається з edge-серверів, встановлених у мережах провайдерів, що дозволяє мінімізувати затримки та розвантажити основну інфраструктуру.
Сховища даних і кешування:
Apache Cassandra — основна NoSQL-база для метаданих, профілів користувачів та історії переглядів,
EVCache (розширення Memcached) — для швидкого кешування гарячих даних,
Amazon S3 — для зберігання відеофайлів,
Kafka/Kinesis — для побудови Data Pipelines в реальному часі.
Надійність і стійкість забезпечуються підходами Chaos Engineering (Chaos Monkey, Simian Army), Circuit Breaker (Hystrix) та клієнтським балансуванням навантаження, що запобігає “каскадним” відмовам.
Спостережуваність і моніторинг:
Atlas — платформа збору метрик у реальному часі,
Spectator — клієнтська бібліотека для метрик,
Zipkin — розподілене трасування запитів між мікросервісами,
Fluentd + Elasticsearch + Kibana — централізований збір і візуалізація логів.
Безпека та захист даних:
AES-шифрування відеопотоків,
DRM-модулі (Widevine, PlayReady, FairPlay),
TLS/HTTPS для всіх з’єднань,
OAuth 2.0 та JWT для авторизації API-запитів.
У результаті архітектура Netflix поєднує гнучкі мікросервіси, потужну хмарну інфраструктуру й інноваційні практики (Big Data, ML-рекомендації, Chaos Engineering), що забезпечує високу доступність, масштабованість і стабільний комфорт користувачам по всьому світу.

4 ВИСНОВКИ
У ході виконання роботи було проаналізовано архітектуру програмної системи Netflix — одного з наймасштабніших стрімінгових сервісів у світі. Netflix поєднує сучасні підходи до побудови розподілених систем, орієнтованих на високу продуктивність, стабільність і гнучкість.
Компанія використовує мікросервісну архітектуру, яка забезпечує незалежну розробку та масштабування окремих компонентів. Перехід до хмарної інфраструктури AWS дозволив спростити управління ресурсами, швидко адаптуватись до змін навантаження та забезпечити глобальну доступність сервісу.
Для оптимізації доставки контенту Netflix створила власну CDN-мережу Open Connect, що дозволяє зменшити затримки та покращити якість перегляду. Також було розглянуто підходи до обробки даних, рекомендаційні системи на базі Big Data, методи забезпечення надійності (Chaos Engineering), а також рішення щодо безпеки, моніторингу та спостереження за сервісами.
Netflix є прикладом ефективного поєднання інноваційних технологій, що забезпечують масштабованість, стійкість до збоїв і високу якість обслуговування користувачів. Така архітектура є еталонною для сучасних ІТ-сервісів і демонструє, як грамотне технічне рішення впливає на успіх цифрового продукту на світовому рівні.

Додаток А
Посилання на відео та хронологічний опис
Відеозапис доповіді на YouTube: https://youtu.be/ZuQTjcHWiws
Хронологічний опис доповіді:
Вступ - 0:00
Вступ: Про Netflix - 0:12
Основні принципи архітектури - 00:49
Мікросервісна архітектура Netflix - 1:17
Хмарна інфраструктура - 2:00
Система доставки контенту (CDN) - 2:38
Сховище даних та обробка - 3:10
Надійність та безперервність (Resilience) - 3:49
Спостереження та моніторинг (Observability) - 4:22
Безпека та захист даних - 4:52
Висновки - 5:20

Додаток Б
Слайди презентації №2
Рисунок Б.1 - Вступ: Про Netflix

Рисунок Б.2 - Основні принципи архітектури

Рисунок Б.3 - Мікросервісна архітектура Netflix

Рисунок Б.4 - Хмарна інфраструктура

Рисунок Б.5 - Система доставки контенту (CDN)

Рисунок Б.6 - Сховище даних та обробка

Рисунок Б.7 - Надійність та безперервність (Resilience)

Рисунок Б.8 - Спостереження та моніторинг (Observability)

Рисунок Б.9 - Безпека та захист даних

Рисунок Б.10 - Висновки